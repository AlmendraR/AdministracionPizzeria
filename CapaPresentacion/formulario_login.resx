<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>