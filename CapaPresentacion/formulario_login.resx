<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>